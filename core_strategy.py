# memo.py
from typing import Optional
from core_strategy import Decision

def build_invest_memo(d: Decision) -> str:
    price = d.meta.get("price")
    piv = d.meta.get("pivots", {})

    parts = []
    parts.append(f"### üéØ Asset: {d.ticker}")
    parts.append(f"**–ì–æ—Ä–∏–∑–æ–Ω—Ç:** {('–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ–∫ (1‚Äì5 –¥–Ω–µ–π)' if d.horizon=='short' else '–°—Ä–µ–¥–Ω–µ—Å—Ä–æ–∫ (1‚Äì4 –Ω–µ–¥–µ–ª–∏)' if d.horizon=='mid' else '–î–æ–ª–≥–æ—Å—Ä–æ–∫ (1‚Äì6 –º–µ—Å—è—Ü–µ–≤)')}  ")
    parts.append(f"**–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞:** ${price}\n")

    parts.append("## üß† Core Recommendation")
    parts.append(f"**–°—Ü–µ–Ω–∞—Ä–∏–π:** **{d.stance}**")

    if d.entry:
        parts.append(f"**–í—Ö–æ–¥:** ${d.entry[0]} ‚Äì ${d.entry[1]}")
    if d.target1: parts.append(f"**TP1:** ${d.target1}")
    if d.target2: parts.append(f"**TP2:** ${d.target2}")
    if d.stop:    parts.append(f"**Stop:** ${d.stop}")

    # human-style –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ
    parts.append("\n## üìù –†–µ–∑—é–º–µ (human-style)")
    if d.stance == "BUY":
        parts.append("–†–∞–±–æ—Ç–∞–µ–º –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –í–∞–∂–Ω–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞, —á–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å. –£—Ä–æ–≤–Ω–∏ –ø–æ –ø—Ä–æ—à–ª–æ–º—É –ø–µ—Ä–∏–æ–¥—É —É–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è.")
    elif d.stance == "SELL":
        parts.append("–ü–µ—Ä–µ–≥—Ä–µ–≤ —É ¬´–∫—Ä—ã—à–∏¬ª. –ò–≥—Ä–∞–µ–º –æ—Ç –æ—Ç–∫–∞–∑–∞ —Å –∫–æ—Ä–æ—Ç–∫–∏–º —Å—Ç–æ–ø–æ–º. –ë–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è ‚Äî –Ω–µ –ª–µ–∑–µ–º.")
    else:
        parts.append("–°–µ–π—á–∞—Å –≤—ã–≥–æ–¥–Ω–µ–µ –ø–æ–¥–æ–∂–¥–∞—Ç—å. –ñ–¥—ë–º –æ—Ç–∫–∞—Ç –∫ –æ–ø–æ—Ä–Ω–æ–π –∑–æ–Ω–µ –∏–ª–∏ —è–≤–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞.")

    # –ü—Ä–∏–ª–æ–∂–∏–º –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã (–±–µ–∑ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ä–º—É–ª)
    parts.append("\n#### –û—Ä–∏–µ–Ω—Ç–∏—Ä—ã (–Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏)")
    piv_line = " / ".join([f"{k}: {v}" for k,v in piv.items()])
    parts.append(f"{piv_line}")

    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    alt = d.meta.get("alt")
    if alt:
        parts.append(f"\n_A–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞:_ {alt}")

    return "\n\n".join(parts)
