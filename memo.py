# memo.py
from typing import Any, Dict, Optional

# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ–º "—Ä–µ—à–µ–Ω–∏–µ" –∫–∞–∫ –æ–±—ã—á–Ω—ã–π dict (—É —Ç–µ–±—è Decision –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç dict)
# –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –∏–Ω–≤–µ—Å—Ç-–º–µ–º–æ –≤ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–º —Å—Ç–∏–ª–µ.

def build_invest_memo(decision: Dict[str, Any]) -> str:
    """
    decision: {
      'ticker': 'QQQ',
      'horizon': 'long'|'mid'|'short',
      'stance': 'BUY'|'SELL'|'WAIT',
      'entry': (float|None, float|None),
      'target1': float|None,
      'target2': float|None,
      'stop': float|None,
      'meta': {'price': float, ...}
    }
    """
    tkr: str = decision.get("ticker", "").upper()
    hz: str = decision.get("horizon", "")
    stance: str = decision.get("stance", "WAIT")
    price: Optional[float] = None
    try:
        price = float(decision.get("meta", {}).get("price"))  # –º–æ–∂–µ—Ç –±—ã—Ç—å Decimal/—Å—Ç—Ä–æ–∫–∞
    except Exception:
        pass

    ent = decision.get("entry")
    if isinstance(ent, (list, tuple)) and len(ent) == 2:
        entry_lo, entry_hi = ent
    else:
        entry_lo = entry_hi = None

    tgt1 = decision.get("target1")
    tgt2 = decision.get("target2")
    stop = decision.get("stop")

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    lines = []
    lines.append(f"üìå {tkr} ‚Äî –≥–æ—Ä–∏–∑–æ–Ω—Ç: {hz}. –¢–µ–∫—É—â–∞—è –æ—Ü–µ–Ω–∫–∞: {stance}")

    # –¶–µ–Ω–∞
    if price is not None:
        lines.append(f"üìä –¶–µ–Ω–∞ —Å–µ–π—á–∞—Å: {price:.2f}")

    # –ü–ª–∞–Ω
    if stance == "WAIT":
        lines.append("‚è≥ –ë–∞–∑–∞: WAIT ‚Äî –∂–¥—ë–º –ª—É—á—à—É—é —Ñ–æ—Ä–º–∞—Ü–∏—é/—Ü–µ–Ω—É —É –æ–ø–æ—Ä–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π.")
    elif stance == "BUY":
        if entry_lo and entry_hi:
            lines.append(f"üü¢ BUY-–∑–æ–Ω–∞: {entry_lo:.2f}‚Ä¶{entry_hi:.2f}")
        if tgt1:
            lines.append(f"üéØ –¶–µ–ª—å 1: {tgt1:.2f}")
        if tgt2:
            lines.append(f"üéØ –¶–µ–ª—å 2: {tgt2:.2f}")
        if stop:
            lines.append(f"üõ° –°—Ç–æ–ø: {stop:.2f}")
    elif stance == "SELL":
        if entry_lo and entry_hi:
            lines.append(f"üî¥ SELL-–∑–æ–Ω–∞: {entry_lo:.2f}‚Ä¶{entry_hi:.2f}")
        if tgt1:
            lines.append(f"üéØ –¶–µ–ª—å 1: {tgt1:.2f}")
        if tgt2:
            lines.append(f"üéØ –¶–µ–ª—å 2: {tgt2:.2f}")
        if stop:
            lines.append(f"üõ° –ó–∞—â–∏—Ç–∞: {stop:.2f}")

    # –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π-–ø–∞–º—è—Ç–∫–∞
    lines.append("‚ö†Ô∏è –ï—Å–ª–∏ —Å—Ü–µ–Ω–∞—Ä–∏–π –ª–æ–º–∞–µ—Ç—Å—è ‚Äî –±—ã—Å—Ç—Ä–æ –≤—ã—Ö–æ–¥–∏–º –∏ –∂–¥—ë–º –Ω–æ–≤—É—é —Ñ–æ—Ä–º–∞—Ü–∏—é.")
    return "\n".join(lines)
